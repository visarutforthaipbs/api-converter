import React, { useState } from "react";
import "./App.css";
import { fetchApiData, isValidUrl } from "./services/api";
import DataTable from "./components/DataTable";
import ApiEducation from "./components/ApiEducation";

// Determine if we're in production (Vercel) or development
const isProd = window.location.hostname !== "localhost";
const proxyPrefix = isProd ? "/api/" : "http://localhost:8080/";

function App() {
  // Update the URL to use a relative path when using the proxy setup
  const defaultUrl =
    "https://epid-odpc2.ddc.moph.go.th/haze-r2/api/patient-group-location?limit=50000";
  const [apiUrl, setApiUrl] = useState<string>(defaultUrl);
  const [data, setData] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  const [filename, setFilename] = useState<string>("my-cool-data");
  const [showProxyHelp, setShowProxyHelp] = useState<boolean>(false);
  const [activeTab, setActiveTab] = useState<string>("converter");
  const [usingLocalProxy, setUsingLocalProxy] = useState<boolean>(false);

  const handleFetchData = async () => {
    if (!apiUrl) {
      setError("‡πÉ‡∏™‡πà URL API ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏ã‡∏¥‡∏™‡∏™‡∏™~ ü•∫üëâüëà");
      return;
    }

    if (!isValidUrl(apiUrl)) {
      setError("URL ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ô‡∏∞‡πÄ‡∏ï‡∏á ‡∏ô‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà URL ‡∏ô‡∏∞‡∏¢‡∏π‡πÇ‡∏ô‡πà‡∏ß‡∏ß üíÖ");
      return;
    }

    setIsLoading(true);
    setError(null);
    setShowProxyHelp(false);

    try {
      // Use the URL as-is if it already includes our proxy
      const urlToFetch =
        apiUrl.includes(proxyPrefix) || usingLocalProxy ? apiUrl : apiUrl;

      const result = await fetchApiData(urlToFetch);
      setData(Array.isArray(result) ? result : [result]);
      setError(null);
    } catch (err: any) {
      console.error("Error fetching data:", err);

      // Provide more specific error message based on the error
      if (err?.message?.includes("timeout") || err?.message?.includes("522")) {
        setError(
          "‡∏ó‡∏≤‡∏°‡πÄ‡∏≠‡∏≤‡∏ó‡πå~~~ ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏•‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡πä‡∏ô ‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏¢‡∏¢ üòµ‚Äçüí´"
        );
        setShowProxyHelp(true);
      } else if (
        err?.message?.includes("Network Error") ||
        err?.code === "ERR_NETWORK"
      ) {
        setError("‡πÄ‡∏ô‡πá‡∏ï‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß? ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ô‡πá‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞‡∏à‡πä‡∏∞ üì∂‚ùå");
        setShowProxyHelp(true);
      } else if (
        err?.response?.status === 403 ||
        err?.response?.status === 401
      ) {
        setError("‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≤‡∏≤~ API ‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏© üîêüëÄ");
        setShowProxyHelp(true);
      } else if (
        err?.message?.includes("HTML") ||
        err?.message?.includes("html")
      ) {
        setError(
          "API ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ (‡πÑ‡∏î‡πâ HTML ‡πÅ‡∏ó‡∏ô) ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ CORS proxy ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏∞‡∏à‡πâ‡∏∞ üîÑ"
        );
        setShowProxyHelp(true);
      } else {
        setError(
          `‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏≠‡πà‡∏∞: ${
            err.message || "‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏ ‡πÅ‡∏ï‡πà‡πÄ‡∏à‡πä‡πÑ‡∏°‡πà‡πÇ‡∏≠‡πÄ‡∏Ñ üò≠"
          }`
        );
        setShowProxyHelp(true);
      }

      setData([]);
    } finally {
      setIsLoading(false);
    }
  };

  const useLocalProxy = () => {
    // If already using the proxy, don't modify
    if (apiUrl.includes(`${proxyPrefix}`)) {
      return;
    }

    // Get URL without existing proxy prefixes if any
    let cleanUrl = apiUrl;
    const proxyPatterns = [
      "http://localhost:8080/",
      "https://corsproxy.io/?",
      "https://cors-anywhere.herokuapp.com/",
      "https://api.allorigins.win/raw?url=",
    ];

    for (const pattern of proxyPatterns) {
      if (cleanUrl.includes(pattern)) {
        cleanUrl = cleanUrl.replace(pattern, "");
        if (pattern.includes("url=")) {
          // Handle URL parameter style proxies
          cleanUrl = decodeURIComponent(cleanUrl);
        }
        break;
      }
    }

    setApiUrl(`${proxyPrefix}${cleanUrl}`);
    setUsingLocalProxy(true);
  };

  return (
    <div className="App">
      <header className="App-header">
        <h1>
          ‚ú® ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡πà‡∏≤‡∏á <span className="highlight-text">API</span> ‚ú®
        </h1>
        <p>
          ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel, CSV ‡πÅ‡∏ö‡∏ö‡∏ä‡∏¥‡∏•‡πÜ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏•‡∏¢‡∏≠‡πà‡∏∞!
        </p>
      </header>

      <div className="tab-container">
        <button
          className={`tab-button ${activeTab === "converter" ? "active" : ""}`}
          onClick={() => setActiveTab("converter")}
        >
          <span className="tab-icon">üîÑ</span> ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API
        </button>
        <button
          className={`tab-button ${activeTab === "education" ? "active" : ""}`}
          onClick={() => setActiveTab("education")}
        >
          <span className="tab-icon">üß†</span> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á API
        </button>
      </div>

      <main className="App-main">
        {activeTab === "converter" && (
          <>
            <div className="input-section">
              <div className="input-group">
                <label htmlFor="api-url">URL API ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏õ‡∏•‡∏á:</label>
                <input
                  type="text"
                  id="api-url"
                  value={apiUrl}
                  onChange={(e) => {
                    setApiUrl(e.target.value);
                    setUsingLocalProxy(e.target.value.includes(proxyPrefix));
                  }}
                  placeholder="‡πÉ‡∏™‡πà URL API ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢~"
                  className="input-field"
                />
              </div>
              <div className="input-group">
                <label htmlFor="filename">‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î:</label>
                <input
                  type="text"
                  id="filename"
                  value={filename}
                  onChange={(e) => setFilename(e.target.value)}
                  placeholder="‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÜ"
                  className="input-field"
                />
              </div>
              <button
                className="fetch-button"
                onClick={handleFetchData}
                disabled={isLoading}
              >
                {isLoading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡πâ‡∏≤... üîÑ" : "‡πÑ‡∏õ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡πâ‡∏≤‡∏ö‡∏ö‡∏ö! üöÄ"}
              </button>
            </div>

            {error && (
              <div className="error-message">
                <p>{error}</p>
                {showProxyHelp && (
                  <div className="proxy-help">
                    <p>
                      <strong>‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏ô‡∏µ‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞‡∏ã‡∏¥‡∏™:</strong>
                    </p>
                    <ol>
                      <li>
                        {usingLocalProxy ? (
                          <span>
                            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ CORS Proxy ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ
                            API URL ‡∏≠‡∏∑‡πà‡∏ô‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏∞
                          </span>
                        ) : (
                          <>
                            {isProd ? (
                              <span>
                                ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ CORS Proxy
                                ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:
                              </span>
                            ) : (
                              <>
                                ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° proxy ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡∏°‡∏¥‡∏ô‡∏≠‡∏•‡∏ô‡∏∞‡∏Ñ‡∏∞:
                                <pre>npm run proxy</pre>
                              </>
                            )}
                          </>
                        )}
                      </li>
                      <li>
                        ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ Proxy:
                        <button
                          className="proxy-button"
                          onClick={useLocalProxy}
                        >
                          ‡πÉ‡∏ä‡πâ {isProd ? "Built-in" : "Local"} Proxy üßô‚Äç‚ôÄÔ∏è
                        </button>
                      </li>
                      <li>
                        ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô ‡∏•‡∏≠‡∏á‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏î‡∏π ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å
                        limit=50000 ‡πÄ‡∏õ‡πá‡∏ô limit=1000 ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡πÜ
                      </li>
                      <li>
                        ‡∏•‡∏≠‡∏á‡∏î‡∏π API ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö{" "}
                        <strong>"‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á API"</strong> ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ô‡∏∞
                      </li>
                    </ol>
                  </div>
                )}
              </div>
            )}

            {data.length > 0 && (
              <div className="data-table-container">
                <DataTable data={data} filename={filename} />
              </div>
            )}
          </>
        )}

        {activeTab === "education" && <ApiEducation />}
      </main>
      <footer className="App-footer">
        <p>
          ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ ‚ù§Ô∏è ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ô‡πâ‡∏≠‡∏á‡πÜ ‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô |
          #‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏≠‡∏û‡∏µ‡πÑ‡∏≠‡πÑ‡∏°‡πà‡∏á‡πâ‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå
        </p>
      </footer>
    </div>
  );
}

export default App;
